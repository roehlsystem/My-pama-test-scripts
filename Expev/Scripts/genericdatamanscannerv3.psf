;*******************************************
;** generic datamanscanner script - 0.1  ***
;** Jan. 11 2020                         ***
;** David Roehl                          ***
;*******************************************


;****************************************************************************************
;PARAMETER VARs

VAR sIPAddress="";
VAR sTimeout="";
VAR debug="";
VAR sID="";
VAR swaitID="";


;****************************************************************************************
;PARAMETER Declarations
PARAMETER sIPAddress,"ip address","","Enter the IP address of the congex dataman scanner";

PARAMETER sID,"What variable name to use to transfer data","","Enter the signal variable name that will be used to transmit data to the other programs";
PARAMETER swaitID,"What variable name to use to make this script wait","","Enter the signal variable name that will be used to HOLD/READY the scanner reading process";

PARAMETER sTimeout,"Read timeout","","Enter the timeout for the read. blank for 10s, -1 for infinite.";
PARAMETER debug,"Debug mode","debug,not debug","Debug displays more info.  It has no functional effect";


;****************************************************************************************
;RUN command Declarations

VAR runWaitFor="WAITFORANY whichevent,nTimeout,"+swaitID+";";
;WAITFORANY whichevent,nTimeout,swaitdatamanScan0;
VAR runSetHold="VAR "+swaitID+"='HOLD'";
;IF (readvalue!"")(VAR swaitdatamanScan0="HOLD");
VAR runSetOutput="VAR "+sID+"=readvalue";
;IF (readvalue!"")(VAR sdatamanScan0=readvalue);         +_+_+_ replace this
VAR runIfGotopready="IF ("+swaitID+"='HOLD')(GOTO pready)"
;IF (whichevent=1)(IF (swaitdatamanScan0="HOLD")(GOTO pready));        +_+_+_ modify this   

VAR runMSG="";   Single use run string


;****************************************************************************************
;SIGNALs

VAR runMSG="INPUTOPEN "+sID+",SIGNAL;";
RUN runMSG;			-->sets the string used to signal the scan user

VAR runMSG="VAR "sID+"='';";
RUN runMSG;

VAR runMSG="INPUTOPEN "+swaitID+",SIGNAL;";
RUN runMSG;			-->sets the string used to signal that the scan user is done processing it.

VAR runMSG="VAR "+swaitID"='';"
RUN runMSG;					"READY" means send more scans, "HOLD"  means wait until ready



INPUTOPEN sbreakit,SIGNAL;			-->sets the string used to try to break 
VAR sbreakit="FALSE";					"TRUE" will give the signal to try to break the script "FALSE" will allow it to act normally




;****************************************************************************************
;VAR Declarations

VAR TIMEOUTMSG="TIMEOUT";
VAR nTimeout=0;
VAR sScanValue="";
VAR readvalue="";
VAR whichevent=0;
VAR waittimeout=30;
VAR sMsg="";


;VARs for testing
VAR nLoopCount=0;




;****************************************************************************************
;Eof  declarations



;****************************************************************************************
;prestart setup

LBL preStart;

IF (sTimeout="")(VAR nTimeout=10000);
IF (sTimeout!"")(STRTONUM sTimeout);
IF (sTimeout!"")(VAR nTimeout=sTimeout);

VAR sMsg="Debug mode is on\n-------->IPAdress= "+sIPAddress+"\n-------->nTimeout= "+numtostr(nTimeout);
IF (debug="debug")(VAR STATUS=sMsg);



;****************************************************************************************
;channel start

LBL pConnect;

TM 1,"DISCONNECT";
WAIT 20;

VAR STATUS = "Connecting to "+sIPAddress;

TM 3,"CONNECT",sIPAddress,23;				--> Initialize Communication with Dataman scanner



WAIT 10;
IF (CONNECTION = "CONNECTED")(VAR STATUS = "Cognex connected succesfully");
IF (CONNECTION = "CONNECTED")(GOTO pconnectedSuccesfully);
MSG_ACK "FAILED TO CONNECT WITH Cognex INTERFACE - \n    Hit OK to try again";
GOTO pConnect;   Trys the connection again




LBL pconnectedSuccesfully;


VAR TIMEOUT = nTimeout;

VAR ncounter=0;
VAR nreadCounter=0;

;****************************************************************************************
;the main loop

LBL pready

VAR runMSG="VAR STATUS="+swaitID;
IF (debug="debug")(RUN runMSG);
;IF (debug="debug")(VAR STATUS=swaitdatamanScan0);       +_+_+_ modify this

INC nLoopCount;

;IF (nLoopCount=5)(GOTO pbreakit);    --------------try to break stuff------------------------------------------------------------------

IF (debug="debug")(VAR STATUS="In waitforany loop:"+numtostr(nLoopCount));

;WAITFORANY whichevent,nTimeout,swaitdatamanScan0;   Waits for signal to send next scan   +_+_+_ replace this
RUN runWaitFor;


;IF (debug="debug")(VAR STATUS=swaitdatamanScan0);
IF (debug="debug")(VAR STATUS=whichevent);
IF (whichevent=0)(GOTO pready);


;IF (whichevent=1)(IF (debug="debug")(VAR STATUS=swaitdatamanScan0));  +_+_+_ modify this
VAR runMSG="VAR STATUS="+swaitID;
IF (whichevent=1)(IF (debug="debug")(RUN runMSG));  [run]

;IF (whichevent=1)(IF (swaitdatamanScan0="READY")(GOTO preadLoop));    +_+_+_ modify this
;IF (whichevent=1)(IF (swaitdatamanScan0="HOLD")(GOTO pready));        +_+_+_ modify this   
IF (whichevent=1)(RUN runIfGotopready);        [run]

IF (whichevent=1)(GOTO preadLoop);                                          +-+- if no valid entry in swaitdatamanScan try to read



LBL preadLoop;************************************

IF (debug="debug")(IF (sbreakit="TRUE")(GOTO pbreakit));    --------------try to break stuff------------------------------------------------------------------

VAR runMSG="VAR STATUS="+swaitID;
IF (debug="debug")(RUN runMSG);       [run]

VAR readvalue="";
R readvalue;

INC ncounter;

IF (readvalue!"")(RUN runSetHold);             +-+-Makes this script wait    [run]
;IF (readvalue!"")(VAR swaitdatamanScan0="HOLD");             +-+-Makes this script wait        +_+_+_ replace this

IF (readvalue!"")(INC nreadCounter);
IF (readvalue!"")(RUN runSetOutput);  [run]
;IF (readvalue!"")(VAR sdatamanScan0=readvalue);         +_+_+_ replace this
IF (readvalue!"")(GOTO pready);




IF (debug="debug")(VAR STATUS ="++++++++++++nCounter:("+numtostr(ncounter)+")   nreadCounter: "+numtostr(nreadCounter));

;------------------------------------------------------------
;try to break it :(

;IF (readvalue="NR")(GOTO pbreakit);


;------------------------------------------------------------


GOTO preadLoop;
;>all below is not used currently*****************************************************************************************************************************



LBL pbreakit;  Trying to break stuff
VAR STATUS ="---------------------------------------------------------Trying to break things";

T "+\n";

WAIT 10;

T "+\n";

WAIT 10;
T "+\n";

WAIT 10;
T "+\n";
WAIT 10;
T "+\n";
WAIT 10;
T "+\n";
IF (nLoopCount=11)(VAR nLoopCount=0);

VAR sbreakit="FALSE";
VAR STATUS = "--------------------------------------------------------eof trying to break things.";

;VAR sdatamanScan="try 1/5";
;VAR sdatamanScan="try 2/5";
;VAR sdatamanScan="try 3/5";
;VAR sdatamanScan="try 4/5";
;VAR sdatamanScan="try 5/5";



GOTO preadLoop;









LBL theend;
VAR RECEIVED="Script Complete";
END;